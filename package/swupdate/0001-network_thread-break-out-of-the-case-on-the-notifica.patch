From 4b918e6242842a459e2d89bbc69ad8327dbf815b Mon Sep 17 00:00:00 2001
From: Charles Hardin <charles.hardin@chargepoint.com>
Date: Mon, 22 May 2023 13:51:39 -0700
Subject: [PATCH 1/1] network_thread: break out of the case on the notification
 history

There is a loop to send the notification history on the control
socket and if there was an error in that loop, then the code
would just continue with an unlocked mutex and progressing into
the control path. This error path seems to be very rare (if ever)
and so unlikely to be hit in any testing without some external
conditions shutting down sockets.

Signed-off-by: Charles Hardin <charles.hardin@chargepoint.com>
---
 core/network_thread.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/core/network_thread.c b/core/network_thread.c
index f4ee335..c8a0d39 100644
--- a/core/network_thread.c
+++ b/core/network_thread.c
@@ -611,11 +611,9 @@ void *network_thread (void *data)
 					break;
 				}
 
-				/* Get first notification from the queue */
-				pthread_mutex_lock(&msglock);
-				notification = SIMPLEQ_FIRST(&notifymsgs);
-
 				/* Send notify history */
+				pthread_mutex_lock(&msglock);
+				ret = 0;
 				SIMPLEQ_FOREACH_SAFE(notification, &notifymsgs, next, tmp) {
 					memset(msg.data.msg, 0, sizeof(msg.data.msg));
 
@@ -627,12 +625,15 @@ void *network_thread (void *data)
 
 					ret = write_notify_msg(&msg, ctrlconnfd);
 					if (ret < 0) {
-						pthread_mutex_unlock(&msglock);
-						ERROR("Error write notify history on socket ctrl");
-						close(ctrlconnfd);
 						break;
 					}
 				}
+				if (ret < 0) {
+					pthread_mutex_unlock(&msglock);
+					ERROR("Error write notify history on socket ctrl");
+					close(ctrlconnfd);
+					break;
+				}
 
 				/*
 				 * Save the new connection to send notifications to
-- 
2.39.2 (Apple Git-143)

